{
  "address": "0x70047532FA0eCfFb15a85Cf3DeD56969a7458Ee5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOfETH",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOfTokens",
          "type": "uint256"
        }
      ],
      "name": "BuyTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOfTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOfETH",
          "type": "uint256"
        }
      ],
      "name": "SellTokens",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmountToSell",
          "type": "uint256"
        }
      ],
      "name": "sellTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensPerEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yourToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x9d8c65c8fee868be2f1cd1eabfe01490f7cf8a863f3031d4a76f80127df8a67c",
  "receipt": {
    "to": null,
    "from": "0x9F7E09006102f52E5daaA5A65EA62288011767d4",
    "contractAddress": "0x70047532FA0eCfFb15a85Cf3DeD56969a7458Ee5",
    "transactionIndex": 96,
    "gasUsed": "617355",
    "logsBloom": "0x
    "blockHash": "0xa2c2179030a19513b75b0542d49c1b5441da8f1853211a1fb75e016b180b04c6",
    "transactionHash": "0x9d8c65c8fee868be2f1cd1eabfe01490f7cf8a863f3031d4a76f80127df8a67c",
    "logs": [
      {
        "transactionIndex": 96,
        "blockNumber": 9312122,
        "transactionHash": "0x9d8c65c8fee868be2f1cd1eabfe01490f7cf8a863f3031d4a76f80127df8a67c",
        "address": "0x70047532FA0eCfFb15a85Cf3DeD56969a7458Ee5",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009f7e09006102f52e5daaa5a65ea62288011767d4"
        ],
        "data": "0x",
        "logIndex": 182,
        "blockHash": "0xa2c2179030a19513b75b0542d49c1b5441da8f1853211a1fb75e016b180b04c6"
      }
    ],
    "blockNumber": 9312122,
    "cumulativeGasUsed": "13523302",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x64192b0d9ab274832e28912463Dde1eE52b8566a"
  ],
  "numDeployments": 1,
  "solcInputHash": "d2f38b519f01290d0a7ac13bd9836fd7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfTokens\",\"type\":\"uint256\"}],\"name\":\"BuyTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfETH\",\"type\":\"uint256\"}],\"name\":\"SellTokens\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmountToSell\",\"type\":\"uint256\"}],\"name\":\"sellTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensPerEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yourToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vendor.sol\":\"Vendor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/Vendor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract Vendor is Ownable {\\n    IERC20 public yourToken;\\n    uint256 public constant tokensPerEth = 100; // 1 ETH = 100 YTK\\n\\n    event BuyTokens(address buyer, uint256 amountOfETH, uint256 amountOfTokens);\\n    event SellTokens(address seller, uint256 amountOfTokens, uint256 amountOfETH);\\n\\n    constructor(address tokenAddress) Ownable(msg.sender) {\\n        yourToken = IERC20(tokenAddress);\\n    }\\n\\n    function buyTokens() public payable {\\n        require(msg.value > 0, \\\"Send ETH to buy tokens\\\");\\n\\n        uint256 amountToBuy = msg.value * tokensPerEth;\\n        uint256 vendorBalance = yourToken.balanceOf(address(this));\\n        require(vendorBalance >= amountToBuy, \\\"Vendor contract has not enough tokens\\\");\\n\\n        bool sent = yourToken.transfer(msg.sender, amountToBuy);\\n        require(sent, \\\"Token transfer failed\\\");\\n\\n        emit BuyTokens(msg.sender, msg.value, amountToBuy);\\n    }\\n\\n    function sellTokens(uint256 tokenAmountToSell) public {\\n        require(tokenAmountToSell > 0, \\\"Specify an amount of token greater than 0\\\");\\n\\n        uint256 userBalance = yourToken.balanceOf(msg.sender);\\n        require(userBalance >= tokenAmountToSell, \\\"Your balance is lower than the amount of tokens to sell\\\");\\n\\n        uint256 amountOfETHToTransfer = tokenAmountToSell / tokensPerEth;\\n        uint256 ownerETHBalance = address(this).balance;\\n        require(ownerETHBalance >= amountOfETHToTransfer, \\\"Vendor has not enough funds\\\");\\n\\n        bool sent = yourToken.transferFrom(msg.sender, address(this), tokenAmountToSell);\\n        require(sent, \\\"Token transfer failed\\\");\\n\\n        (bool ethSent, ) = msg.sender.call{value: amountOfETHToTransfer}(\\\"\\\");\\n        require(ethSent, \\\"Failed to send ETH\\\");\\n\\n        emit SellTokens(msg.sender, tokenAmountToSell, amountOfETHToTransfer);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        (bool success, ) = msg.sender.call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"Failed to withdraw\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xd94f6d3375a3729fba892fd04a0d9ff9d9717ee4aac038ab71c181438a14566a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a5f380380610a5f83398101604081905261002f916100d4565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610084565b50600180546001600160a01b0319166001600160a01b0392909216919091179055610104565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e657600080fd5b81516001600160a01b03811681146100fd57600080fd5b9392505050565b61094c806101136000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610109578063cbdd69b514610127578063d0febe4c1461014a578063f2fde38b1461015257600080fd5b80633ccfd60b146100805780636c11bcd314610097578063715018a6146100b75780637879e84b146100cc575b600080fd5b34801561008c57600080fd5b50610095610172565b005b3480156100a357600080fd5b506100956100b2366004610845565b61020f565b3480156100c357600080fd5b5061009561054f565b3480156100d857600080fd5b506001546100ec906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011557600080fd5b506000546001600160a01b03166100ec565b34801561013357600080fd5b5061013c606481565b604051908152602001610100565b610095610563565b34801561015e57600080fd5b5061009561016d36600461085e565b61078d565b61017a6107c8565b604051600090339047908381818185875af1925050503d80600081146101bc576040519150601f19603f3d011682016040523d82523d6000602084013e6101c1565b606091505b505090508061020c5760405162461bcd60e51b81526020600482015260126024820152714661696c656420746f20776974686472617760701b60448201526064015b60405180910390fd5b50565b600081116102715760405162461bcd60e51b815260206004820152602960248201527f5370656369667920616e20616d6f756e74206f6620746f6b656e20677265617460448201526806572207468616e20360bc1b6064820152608401610203565b6001546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156102ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102de919061088e565b9050818110156103565760405162461bcd60e51b815260206004820152603760248201527f596f75722062616c616e6365206973206c6f776572207468616e20746865206160448201527f6d6f756e74206f6620746f6b656e7320746f2073656c6c0000000000000000006064820152608401610203565b60006103636064846108a7565b905047818110156103b65760405162461bcd60e51b815260206004820152601b60248201527f56656e646f7220686173206e6f7420656e6f7567682066756e647300000000006044820152606401610203565b6001546040516323b872dd60e01b8152336004820152306024820152604481018690526000916001600160a01b0316906323b872dd906064016020604051808303816000875af115801561040e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043291906108c9565b9050806104795760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610203565b604051600090339085908381818185875af1925050503d80600081146104bb576040519150601f19603f3d011682016040523d82523d6000602084013e6104c0565b606091505b50509050806105065760405162461bcd60e51b815260206004820152601260248201527108cc2d2d8cac840e8de40e6cadcc8408aa8960731b6044820152606401610203565b60408051338152602081018890529081018590527fa24838acd4af5195a2396965dae5abf54e84e8c19f5698bb966ae64e29994ee59060600160405180910390a1505050505050565b6105576107c8565b61056160006107f5565b565b600034116105ac5760405162461bcd60e51b815260206004820152601660248201527553656e642045544820746f2062757920746f6b656e7360501b6044820152606401610203565b60006105b96064346108eb565b6001546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b919061088e565b90508181101561068b5760405162461bcd60e51b815260206004820152602560248201527f56656e646f7220636f6e747261637420686173206e6f7420656e6f75676820746044820152646f6b656e7360d81b6064820152608401610203565b60015460405163a9059cbb60e01b8152336004820152602481018490526000916001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156106dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070191906108c9565b9050806107485760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610203565b604080513381523460208201529081018490527f0a37b72bb67eee30e09084cf386f8a17817c57f620c3ab95fb25d6a20356ec779060600160405180910390a1505050565b6107956107c8565b6001600160a01b0381166107bf57604051631e4fbdf760e01b815260006004820152602401610203565b61020c816107f5565b6000546001600160a01b031633146105615760405163118cdaa760e01b8152336004820152602401610203565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561085757600080fd5b5035919050565b60006020828403121561087057600080fd5b81356001600160a01b038116811461088757600080fd5b9392505050565b6000602082840312156108a057600080fd5b5051919050565b6000826108c457634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156108db57600080fd5b8151801515811461088757600080fd5b808202811582820484141761091057634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212209f1e11f878e1c6b832b2978c441bcaed6467dc21f7b9b76dd3a4b803fcf42ec264736f6c63430008140033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610109578063cbdd69b514610127578063d0febe4c1461014a578063f2fde38b1461015257600080fd5b80633ccfd60b146100805780636c11bcd314610097578063715018a6146100b75780637879e84b146100cc575b600080fd5b34801561008c57600080fd5b50610095610172565b005b3480156100a357600080fd5b506100956100b2366004610845565b61020f565b3480156100c357600080fd5b5061009561054f565b3480156100d857600080fd5b506001546100ec906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011557600080fd5b506000546001600160a01b03166100ec565b34801561013357600080fd5b5061013c606481565b604051908152602001610100565b610095610563565b34801561015e57600080fd5b5061009561016d36600461085e565b61078d565b61017a6107c8565b604051600090339047908381818185875af1925050503d80600081146101bc576040519150601f19603f3d011682016040523d82523d6000602084013e6101c1565b606091505b505090508061020c5760405162461bcd60e51b81526020600482015260126024820152714661696c656420746f20776974686472617760701b60448201526064015b60405180910390fd5b50565b600081116102715760405162461bcd60e51b815260206004820152602960248201527f5370656369667920616e20616d6f756e74206f6620746f6b656e20677265617460448201526806572207468616e20360bc1b6064820152608401610203565b6001546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156102ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102de919061088e565b9050818110156103565760405162461bcd60e51b815260206004820152603760248201527f596f75722062616c616e6365206973206c6f776572207468616e20746865206160448201527f6d6f756e74206f6620746f6b656e7320746f2073656c6c0000000000000000006064820152608401610203565b60006103636064846108a7565b905047818110156103b65760405162461bcd60e51b815260206004820152601b60248201527f56656e646f7220686173206e6f7420656e6f7567682066756e647300000000006044820152606401610203565b6001546040516323b872dd60e01b8152336004820152306024820152604481018690526000916001600160a01b0316906323b872dd906064016020604051808303816000875af115801561040e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043291906108c9565b9050806104795760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610203565b604051600090339085908381818185875af1925050503d80600081146104bb576040519150601f19603f3d011682016040523d82523d6000602084013e6104c0565b606091505b50509050806105065760405162461bcd60e51b815260206004820152601260248201527108cc2d2d8cac840e8de40e6cadcc8408aa8960731b6044820152606401610203565b60408051338152602081018890529081018590527fa24838acd4af5195a2396965dae5abf54e84e8c19f5698bb966ae64e29994ee59060600160405180910390a1505050505050565b6105576107c8565b61056160006107f5565b565b600034116105ac5760405162461bcd60e51b815260206004820152601660248201527553656e642045544820746f2062757920746f6b656e7360501b6044820152606401610203565b60006105b96064346108eb565b6001546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b919061088e565b90508181101561068b5760405162461bcd60e51b815260206004820152602560248201527f56656e646f7220636f6e747261637420686173206e6f7420656e6f75676820746044820152646f6b656e7360d81b6064820152608401610203565b60015460405163a9059cbb60e01b8152336004820152602481018490526000916001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156106dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070191906108c9565b9050806107485760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610203565b604080513381523460208201529081018490527f0a37b72bb67eee30e09084cf386f8a17817c57f620c3ab95fb25d6a20356ec779060600160405180910390a1505050565b6107956107c8565b6001600160a01b0381166107bf57604051631e4fbdf760e01b815260006004820152602401610203565b61020c816107f5565b6000546001600160a01b031633146105615760405163118cdaa760e01b8152336004820152602401610203565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561085757600080fd5b5035919050565b60006020828403121561087057600080fd5b81356001600160a01b038116811461088757600080fd5b9392505050565b6000602082840312156108a057600080fd5b5051919050565b6000826108c457634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156108db57600080fd5b8151801515811461088757600080fd5b808202811582820484141761091057634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212209f1e11f878e1c6b832b2978c441bcaed6467dc21f7b9b76dd3a4b803fcf42ec264736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/Vendor.sol:Vendor",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 942,
        "contract": "contracts/Vendor.sol:Vendor",
        "label": "yourToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)877"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)877": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      }
    }
  }
}